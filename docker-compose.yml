version: "3.9"
services:

  sql-server-application-db:
    container_name: sql-server-application-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - "ACCEPT_EULA=Y"
      - "MSSQL_SA_PASSWORD=yourStrong(!)Password"
      - "MSSQL_PID=Developer"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data_application_db:/var/opt/mssql/data
      - sqlserver_log_application_db:/var/opt/mssql/log
      - sqlserver_secrets_application_db:/var/opt/mssql/secrets

  sql-server-specialization-db:
    container_name: sql-server-specialization-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - "ACCEPT_EULA=Y"
      - "MSSQL_SA_PASSWORD=yourStrong(!)Password"
      - "MSSQL_PID=Developer"
    ports:
      - "1434:1433"
    volumes:
      - sqlserver_data_specialization_db:/var/opt/mssql/data
      - sqlserver_log_specialization_db:/var/opt/mssql/log
      - sqlserver_secrets_specialization_db:/var/opt/mssql/secrets

  sql-server-gateway-db:
    container_name: sql-server-gateway-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
      - "ACCEPT_EULA=Y"
      - "MSSQL_SA_PASSWORD=yourStrong(!)Password"
      - "MSSQL_PID=Developer"
    ports:
      - "1435:1433"
    volumes:
      - sqlserver_data_gateway_db:/var/opt/mssql/data
      - sqlserver_log_gateway_db:/var/opt/mssql/log
      - sqlserver_secrets_gateway_db:/var/opt/mssql/secrets

  application-service:
    container_name: application-service
    build:
      context: ./applicationservice
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sql-server-application-db:1433;databaseName=application_db;encrypt=true;trustServerCertificate=true"
      SPRING_DATASOURCE_USERNAME: "sa"
      SPRING_DATASOURCE_PASSWORD: "${MSSQL_SA_PASSWORD:-yourStrong(!)Password}"
      SECURITY_JWT_SALT: "${JWT_SECRET:-your_secret}"
      EUREKA_SERVER: "http://eureka-service:8761/eureka/"
      SPECIALIZATION_SERVICE_URL: "http://specialization-service:8090"
      KAFKA_ADDRESS: "kafka:29092"
    ports:
      - "${APP_PORT:-8070}:8070"
    depends_on:
      - sql-server-application-db
      - eureka-service

  gateway-service:
    container_name: gateway-service
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sql-server-gateway-db:1433;databaseName=gateway_db;encrypt=true;trustServerCertificate=true"
      SPRING_DATASOURCE_USERNAME: "sa"
      SPRING_DATASOURCE_PASSWORD: "${MSSQL_SA_PASSWORD:-yourStrong(!)Password}"
      SECURITY_JWT_SALT: "${JWT_SECRET:-your_secret}"
      EUREKA_SERVER: "http://eureka-service:8761/eureka/"
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      - sql-server-gateway-db
      - eureka-service

  specialization-service:
    container_name: specialization-service
    build:
      context: ./specializationservice
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sql-server-specialization-db:1433;databaseName=specialization_db;encrypt=true;trustServerCertificate=true"
      SPRING_DATASOURCE_USERNAME: "sa"
      SPRING_DATASOURCE_PASSWORD: "${MSSQL_SA_PASSWORD:-yourStrong(!)Password}"
      SECURITY_JWT_SALT: "${JWT_SECRET:-your_secret}"
      EUREKA_SERVER: "http://eureka-service:8761/eureka/"
      APPLICATION_SERVICE_URL: "http://application-service:8070"
      KAFKA_ADDRESS: "kafka:29092"
    ports:
      - "${APP_PORT:-8090}:8090"
    depends_on:
      - sql-server-specialization-db
      - eureka-service

  eureka-service:
    container_name: eureka-service
    build:
      context: ./eurekaserver
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-8761}:8761"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookepeer
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka
    container_name: kafka
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092, PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data

volumes:
  sql_server_data:
    driver: local
  sqlserver_data_application_db:
  sqlserver_log_application_db:
  sqlserver_secrets_application_db:
  sqlserver_data_specialization_db:
  sqlserver_log_specialization_db:
  sqlserver_secrets_specialization_db:
  sqlserver_data_gateway_db:
  sqlserver_log_gateway_db:
  sqlserver_secrets_gateway_db:
  kafka_data: { }
  zookeeper_data: { }
  zookeeper_log: { }
