openapi: 3.0.3

info:
  title: Hospital API
  description: "API для Hospital"
  version: 1.3.0

servers:
  - url: https://hospital.com/

tags:
  - name: patients
    description: Работа с пациентами
  - name: admin-patients
    description: Админка (работа с пациентами)
  - name: super-admin-patients
    description: Супер админка (работа с пациентами)
  - name: doctors
    description: Работа с врачами
  - name: admin-doctors
    description: Админка (работа с врачами)
  - name: super-admin-doctors
    description: Супер админка (работа с врачами)
  - name: specializations
    description: Работа со специализациями
  - name: super-admin-specializations
    description: Супер админка (работа со специализациями)
  - name: recipes
    description: Работа с рецептами
  - name: super-admin-recipes
    description: Супер админка (Работа с рецептами)
  - name: diseases
    description: Работа с болезнями
  - name: super-admin-diseases
    description: Супер админка (Работа с болезнями)
  - name: authorization
    description: Авторизация
  - name: super-admin-users
    description: Супер админка (работа с пользователями)

paths:
  #################### patients ####################
  /patients:
    get:
      operationId: getPatients
      tags:
        - patients
      summary: Получить список пациентов
      description: Возвращает список пациентов со смещением offset и количеством limit
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: -1
          description: Количество возвращаемых пациентов
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Смещение по количеству пациентов
      responses:
        '200':
          description: Получен смещенный список пациентов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientShortInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /patients/{patientId}:
    get:
      operationId: getPatient
      tags:
        - patients
      summary: Получить пациента
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Информация о пациенте успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /patients/recipes/{patientId}:
    get:
      operationId: getRecipesPatient
      tags:
        - patients
      summary: Получить рецепты пациента
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Рецепты пациента успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    post:
      operationId: addRecipeToPatient
      tags:
        - patients
      summary: Выписка рецепта пациенту
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - in: query
          name: medicationId
          description: "Id медикамента"
          required: true
          explode: false
          schema:
            type: integer
            format: int32
        - in: query
          name: expirationDate
          description: "Конец действия рецепта"
          required: true
          explode: false
          schema:
            type: string
            format: date
        - in: query
          name: medicalHistoryNoteId
          description: "Id приёма врача"
          required: true
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Рецепт успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Сущности с указанными Id не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "409":
          description: Рецепт с таким id у данного пациента уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /patients/diseases/{patientId}:
    post:
      operationId: addDiseaseToPatient
      tags:
        - patients
      summary: Добавить болезнь пациенту
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - in: query
          name: diseaseId
          description: "Id болезни"
          required: true
          explode: false
          schema:
            type: integer
            format: int32
        - in: query
          name: dispensaryAccounting
          description: "Стоит ли на диспансерном учете"
          required: true
          explode: false
          schema:
            type: boolean
      responses:
        '200':
          description: Болезнь успешно добавлена пациенту
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент или болезнь с указанным Id не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    delete:
      operationId: deleteDiseaseFromPatient
      tags:
        - patients
      summary: Удалить болезнь пациенту
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - in: query
          name: diseaseId
          description: "Id болезни"
          required: true
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Болезнь успешно удалена у пациента
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент или болезнь с указанным Id не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    get:
      operationId: getDiseasesPatient
      tags:
        - patients
      summary: Получить болезни пациента
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Болезни пациента успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  /patients/diseases:
    get:
      operationId: getPatientsDiseases
      tags:
        - patients
      summary: Получить список пациентов с их болезнями
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: -1
          description: Количество возвращаемых записей
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Смещение по количеству записей
      responses:
        '200':
          description: Список пациентов успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientWithDisease'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### patients ####################

  #################### admin-patients ####################
  /admin/patients:
    post:
      operationId: registerPatient
      tags:
        - admin-patients
      summary: Добавить нового пациента
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientWithoutId'
        required: true
      responses:
        '200':
          description: Пациент успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /admin/patients/{patientId}:
    put:
      operationId: editPatient
      tags:
        - admin-patients
      summary: Изменить информацию о пациенте
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientWithoutId'
        required: true
      responses:
        '200':
          description: Информация о пациенте успешно изменена
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  /admin/patients/detach/{patientId}:
    put:
      operationId: detachPatient
      tags:
        - admin-patients
      summary: Открепить пациента от больницы
      parameters:
        - name: patientId
          in: path
          description: "Id пациента, который открепляется"
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Пациент успешно откреплен
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  /admin/patients/attach/{patientId}:
    put:
      operationId: attachPatient
      tags:
        - admin-patients
      summary: Прикрепить пациента от больницы
      parameters:
        - name: patientId
          in: path
          description: "Id пациента, который прикрепляется"
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Пациент успешно прикреплён
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### admin-patients ####################

  #################### super-admin-patients ####################
  /super/admin/patients/{patientId}:
    delete:
      operationId: deletePatient
      tags:
        - super-admin-patients
      summary: Удаление пациента
      parameters:
        - name: patientId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Пациент успешно удалён
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пациент с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### super-admin-patients ####################

  #################### doctors ####################
  /doctors:
    get:
      operationId: getDoctors
      tags:
        - doctors
      summary: Получить список врачей
      description: Возвращает список врачей со смещением offset и количеством limit
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: -1
          description: Количество возвращаемых врачей
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Смещение по количеству врачей
      responses:
        '200':
          description: Получен смещенный список врачей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctorShortInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /doctors/{doctorId}:
    get:
      operationId: getDoctor
      tags:
        - doctors
      summary: Получить доктора
      parameters:
        - name: doctorId
          required: true
          in: path
          description: "Id доктора"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Информация о докторе успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Доктор с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /doctors/specializations/{doctorId}:
    get:
      operationId: getDoctorSpecializations
      tags:
        - doctors
      summary: Получить специализации доктора
      parameters:
        - name: doctorId
          required: true
          in: path
          description: "Id доктора"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Информация о специализациях доктора успешно получена
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctorSpecialization'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Доктор с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### doctors ####################

  #################### admin-doctors ####################

  #################### admin-doctors ####################

  #################### super-admin-doctors ####################
  /super/admin/doctors/{doctorId}:
    delete:
      operationId: deleteDoctor
      tags:
        - super-admin-doctors
      summary: Удаление врача
      parameters:
        - name: doctorId
          required: true
          in: path
          description: "Id доктора"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Доктор успешно удалён
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Доктор с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  /super/admin/doctors/specialization/{doctorId}:
    post:
      operationId: addSpecializationToDoctor
      tags:
        - super-admin-doctors
      summary: Назначить специализацию доктору
      parameters:
        - name: doctorId
          required: true
          in: path
          description: "Id доктора"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - name: specializationId
          required: true
          in: query
          description: "Id специализации"
          explode: false
          schema:
            type: integer
            format: int32
        - name: yearsOfExperience
          required: true
          in: query
          description: "Количество лет опыта"
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Доктору успешно назначена специализация
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Доктор или специализация с указанным Id не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
    put:
      operationId: changeSpecializationExperienceDoctor
      tags:
        - super-admin-doctors
      summary: Изменить опыт доктора по специализации
      parameters:
        - name: doctorId
          required: true
          in: path
          description: "Id доктора"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - name: specializationId
          required: true
          in: query
          description: "Id специализации"
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Доктору успешно изменен опыт по специализации
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Доктор или специализация с указанным Id не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  #################### super-admin-doctors ####################

  #################### specializations ####################
  /specializations:
    get:
      operationId: getSpecializations
      tags:
        - specializations
      summary: Получить список специализаций
      responses:
        '200':
          description: Специализации успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Specialization'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  /specializations/doctors/{specializationId}:
    get:
      operationId: getSpecializationsDoctors
      tags:
        - specializations
      summary: Получить список врачей по специализации
      parameters:
        - name: specializationId
          required: true
          in: path
          description: "Id специализации"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Врачи успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctorShortInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### specializations ####################

  #################### admin-specializations ####################

  #################### admin-specializations ####################

  #################### super-admin-specializations ####################
  /super/admin/specializations:
    post:
      operationId: addSpecialization
      tags:
        - super-admin-specializations
      summary: Добавление специализации
      parameters:
        - in: query
          name: specializationName
          description: "Название специализации"
          required: true
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Специализация успешно добавлена
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdResponse'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "409":
          description: Специализация с таким именем уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'

  /super/admin/specialization/{specializationId}:
    delete:
      operationId: deleteSpecialization
      tags:
        - super-admin-specializations
      summary: Удаление специализации
      parameters:
        - name: specializationId
          in: path
          description: "Id специализации, которая удаляется"
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Специализация успешно удалена
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Специализация с указанным Id не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### super-admin-specializations ####################

  #################### recipes ####################
  /recipes:
    get:
      operationId: getRecipes
      tags:
        - recipes
      summary: Получить рецепты
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: -1
          description: Количество возвращаемых рецептов
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Смещение по количеству рецептов
      responses:
        '200':
          description: Информация о рецептах успешно получена
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /recipes/{recipeId}:
    get:
      operationId: getRecipe
      tags:
        - recipes
      summary: Получить рецепт
      parameters:
        - name: recipeId
          required: true
          in: path
          description: "Id пациента"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Информация о рецепте успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Рецепт с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### recipes ####################

  #################### super-admin-recipes ####################
  /super/admin/recipes/{recipeId}:
    delete:
      operationId: deleteRecipe
      tags:
        - super-admin-recipes
      summary: Удаление рецепта
      parameters:
        - name: recipeId
          in: path
          description: "Id рецепта, который удаляется"
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Рецепт успешно удален
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Рецепт с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### super-admin-recipes ####################

  #################### diseases ####################
  /diseases:
    get:
      operationId: getDiseases
      tags:
        - diseases
      summary: Получить список болезней
      description: Возвращает список болезней со смещением offset и количеством limit
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: -1
          description: Количество возвращаемых болезней
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Смещение по количеству болезней
      responses:
        '200':
          description: Информация о болезнях успешно получена
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /diseases/{diseaseId}:
    get:
      operationId: getDisease
      tags:
        - diseases
      summary: Получить болезнь
      parameters:
        - name: diseaseId
          required: true
          in: path
          description: "Id болезни"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Информация о болезни успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Болезнь с указанным Id не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /diseases/patients/{diseaseId}:
    get:
      operationId: getPatientsWithDisease
      tags:
        - diseases
      summary: Получить пациентов с болезнью
      parameters:
        - name: diseaseId
          required: true
          in: path
          description: "Id болезни"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Информация о пациентах успешно получена
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientShortInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Болезнь с указанным Id не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### diseases ####################

  #################### super-admin-diseases ####################
  /super/admin/diseases:
    post:
      operationId: addDisease
      tags:
        - super-admin-diseases
      summary: Добавить болезнь
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseWithoutId'
        required: true
      responses:
        "200":
          description: Болезнь успешно добавлена
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /super/admin/diseases/{diseaseId}:
    put:
      operationId: editDisease
      tags:
        - super-admin-diseases
      summary: Изменить болезнь
      parameters:
        - name: diseaseId
          required: true
          in: path
          description: "Id болезни"
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseWithoutId'
      responses:
        '200':
          description: Информация о болезни успешно изменена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseFullInfo'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Болезнь с указанным Id не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### super-admin-diseases ####################

  #################### authorization ####################
  /auth/registration:
    post:
      operationId: performRegistration
      tags:
        - authorization
      summary: Регистрация пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
        required: true
      responses:
        "200":
          description: Пользователь создан успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTToken'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "409":
          description: Пользователь с таким email уже зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /auth/login:
    post:
      operationId: performLogin
      tags:
        - authorization
      summary: Авторизация пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeUserRequest'
        required: true
      responses:
        "200":
          description: Пользователь авторизован успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWTToken'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пользователь с такими данными не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  #################### authorization ####################

  #################### super-admin-users ####################
  /super/admin/users:
    get:
      operationId: getUsers
      tags:
        - super-admin-users
      summary: Получить список пользователей
      description: Возвращает список пользователей со смещением offset и количеством limit
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: -1
          description: Количество возвращаемых пользователей
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            minimum: 0
          description: Смещение по количеству пользователей
      responses:
        '200':
          description: Получен смещенный список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfoForAdminPanel'
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'


  /super/admin/users/{userId}:
    delete:
      operationId: deleteUser
      tags:
        - super-admin-users
      summary: Удаление пользователя
      parameters:
        - name: userId
          in: path
          description: "Id пользователя, который удаляется"
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Пользователя успешно удален
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пользователь с указанным Id не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'


  /super/admin/userRights/{userId}:
    post:
      operationId: changeUserRights
      parameters:
        - name: userId
          in: path
          description: Id пользователя
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - name: role
          in: query
          description: Роль пользователя
          required: true
          schema:
            type: string
      tags:
        - super-admin-users
      summary: Изменить права пользователя
      responses:
        "200":
          description: Права пользователя успешно обновлены
        "400":
          description: Некорректные параметры запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
        "404":
          description: Пользователь с указанным Id не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
#################### super-admin-users ####################

components:
  schemas:
    PatientWithDisease:
      type: object
      properties:
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество
        gender:
          type: string
          description: Пол
          minLength: 1
          maxLength: 1
        dateOfBirth:
          type: string
          description: Дата рождения
          format: date
        diseaseCode:
          type: string
          description: Код болезни
        diseaseName:
          type: string
          description: Название болезни
        dispensaryAccounting:
          type: boolean
          description: "Стоит ли на диспансерном учете"
    DiseaseWithoutId:
      type: object
      properties:
        diseaseName:
          type: string
          description: Название болезни
        diseaseCode:
          type: string
          description: Код болезни
        commonDiseaseDuration:
          type: string
          description: Обычная продолжительность болезни
    DiseaseFullInfo:
      type: object
      properties:
        diseaseId:
          type: integer
          description: Id болезни
        diseaseName:
          type: string
          description: Название болезни
        diseaseCode:
          type: string
          description: Код болезни
        commonDiseaseDuration:
          type: string
          description: Обычная продолжительность болезни
    RecipeFullInfo:
      type: object
      properties:
        recipeId:
          type: integer
          description: Id рецепта
        admissionDateTime:
          type: string
          description: Время и дата приёма
          format: date
        expirationDate:
          type: string
          description: Дата срока годности рецепта
          format: date
        medicationName:
          type: string
          description: Название медикамента
        dosage:
          type: string
          description: Дозировка медикамента
        patientLastName:
          type: string
          description: Фамилия пациента
        patientFirstName:
          type: string
          description: Имя пациента
        patientMiddleName:
          type: string
          description: Отчество пациента
        doctorLastName:
          type: string
          description: Фамилия доктора
        doctorFirstName:
          type: string
          description: Имя доктора
        doctorMiddleName:
          type: string
          description: Отчество доктора
    Specialization:
      type: object
      properties:
        specializationId:
          type: integer
          description: Id специализации
        specializationName:
          type: string
          description: Название специализации
    DoctorSpecialization:
      type: object
      properties:
        specializationId:
          type: integer
          description: Id специализации
        specializationName:
          type: string
          description: Название специализации
        yearsOfExperience:
          type: integer
          description: Количество лет опыта
    DoctorShortInfo:
      type: object
      properties:
        doctorId:
          type: integer
          description: Id врача
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество
        dateOfBirth:
          type: string
          description: Дата рождения
          format: date
        gender:
          type: string
          description: Пол
          minLength: 1
          maxLength: 1
        specializationName:
          type: string
          description: Специализация
        yearsOfExperience:
          type: integer
          description: Количество лет опыта
        isDeleted:
          type: boolean
          description: Удалён ли врач
    DoctorFullInfo:
      type: object
      properties:
        doctorId:
          type: integer
          description: Id врача
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество
        dateOfBirth:
          type: string
          description: Дата рождения
          format: date
        gender:
          type: string
          description: Пол
          minLength: 1
          maxLength: 1
        education:
          type: string
          description: Образование
        phoneNumber:
          type: string
          description: Номер телефона
        emailAddress:
          type: string
          description: Email врача
        isDeleted:
          type: boolean
          description: Удалён ли врач
    PatientWithoutId:
      type: object
      properties:
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество
        gender:
          type: string
          description: Пол
          minLength: 1
          maxLength: 1
        dateOfBirth:
          type: string
          description: Дата рождения
          format: date
        phoneNumber:
          type: string
          description: Номер телефона
        insuranceInformation:
          type: string
          description: Информация по страховке
        isDeleted:
          type: boolean
          description: Откреплён ли пациент
    PatientFullInfo:
      type: object
      properties:
        patientId:
          type: integer
          description: Id пациента
          format: int32
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество
        gender:
          type: string
          description: Пол
          minLength: 1
          maxLength: 1
        dateOfBirth:
          type: string
          description: Дата рождения
          format: date
        phoneNumber:
          type: string
          description: Номер телефона
        insuranceInformation:
          type: string
          description: Информация по страховке
        isDeleted:
          type: boolean
          description: Откреплён ли пациент
    PatientShortInfo:
      type: object
      properties:
        patientId:
          type: integer
          description: Id пациента
          format: int32
        lastName:
          type: string
          description: Фамилия
        firstName:
          type: string
          description: Имя
        middleName:
          type: string
          description: Отчество
        gender:
          type: string
          description: Пол
          minLength: 1
          maxLength: 1
        dateOfBirth:
          type: string
          description: Дата рождения
          format: date
        isDeleted:
          type: boolean
          description: Откреплён ли пациент
    RegisterUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email
        password:
          type: string
          description: Пароль пользователя
    UserInfoForAdminPanel:
      type: object
      properties:
        userId:
          type: integer
          description: Id пользователя
          format: int32
        email:
          type: string
          description: Email
        role:
          type: string
          description: Роль пользователя
    AuthorizeUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email
        password:
          type: string
          description: Пароль пользователя
    IdResponse:
      type: object
      properties:
        id:
          type: integer
          description: Id пользователя
          format: int32
    JWTToken:
      type: object
      properties:
        jwtToken:
          type: string
          description: JWT токен пользователя
    ApiErrorResponse:
      type: object
      properties:
        description:
          type: string
        code:
          type: string
        exceptionName:
          type: string
        exceptionMessage:
          type: string
        stacktrace:
          type: array
          items:
            type: string


              # /patients/history/{id}:
              #   get:
              #     operationId: getHistoryPatient
              #     tags:
              #       - patients
              #     summary: Получить историю болезней пациента
              #     parameters:
              #       - name: id
              #         required: true
              #         in: path
              #         description: "Id пациента"
              #         style: simple
              #         explode: false
              #         schema:
              #           type: integer
              #           format: int32
              #     responses:
              #       '200':
              #         description: История болезней пациента успешно получена
              #         content:
              #           application/json:
              #             schema:
              #               $ref: '#/components/schemas/'
              #       "400":
              #         description: Некорректные параметры запроса
              #         content:
              #           application/json:
              #             schema:
              #               $ref: '#/components/schemas/ApiErrorResponse'
              #       "404":
              #         description: Пациент с указанным Id не найден
              #         content:
              #           application/json:
              #             schema:
            #               $ref: '#/components/schemas/ApiErrorResponse'
